// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module singleGUV (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        subimg_address0,
        subimg_ce0,
        subimg_q0,
        u,
        v,
        inv,
        cosMat_address0,
        cosMat_ce0,
        cosMat_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 29'b1;
parameter    ap_ST_fsm_state2 = 29'b10;
parameter    ap_ST_fsm_state3 = 29'b100;
parameter    ap_ST_fsm_state4 = 29'b1000;
parameter    ap_ST_fsm_state5 = 29'b10000;
parameter    ap_ST_fsm_state6 = 29'b100000;
parameter    ap_ST_fsm_state7 = 29'b1000000;
parameter    ap_ST_fsm_state8 = 29'b10000000;
parameter    ap_ST_fsm_state9 = 29'b100000000;
parameter    ap_ST_fsm_state10 = 29'b1000000000;
parameter    ap_ST_fsm_state11 = 29'b10000000000;
parameter    ap_ST_fsm_state12 = 29'b100000000000;
parameter    ap_ST_fsm_state13 = 29'b1000000000000;
parameter    ap_ST_fsm_state14 = 29'b10000000000000;
parameter    ap_ST_fsm_state15 = 29'b100000000000000;
parameter    ap_ST_fsm_state16 = 29'b1000000000000000;
parameter    ap_ST_fsm_state17 = 29'b10000000000000000;
parameter    ap_ST_fsm_state18 = 29'b100000000000000000;
parameter    ap_ST_fsm_state19 = 29'b1000000000000000000;
parameter    ap_ST_fsm_state20 = 29'b10000000000000000000;
parameter    ap_ST_fsm_state21 = 29'b100000000000000000000;
parameter    ap_ST_fsm_state22 = 29'b1000000000000000000000;
parameter    ap_ST_fsm_state23 = 29'b10000000000000000000000;
parameter    ap_ST_fsm_state24 = 29'b100000000000000000000000;
parameter    ap_ST_fsm_state25 = 29'b1000000000000000000000000;
parameter    ap_ST_fsm_state26 = 29'b10000000000000000000000000;
parameter    ap_ST_fsm_state27 = 29'b100000000000000000000000000;
parameter    ap_ST_fsm_state28 = 29'b1000000000000000000000000000;
parameter    ap_ST_fsm_state29 = 29'b10000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv64_3FC6A09E60000000 = 64'b11111111000110101000001001111001100000000000000000000000000000;
parameter    ap_const_lv64_3FD0000000000000 = 64'b11111111010000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_3FE6A09E60000000 = 64'b11111111100110101000001001111001100000000000000000000000000000;
parameter    ap_const_lv64_3FF0000000000000 = 64'b11111111110000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] subimg_address0;
output   subimg_ce0;
input  [31:0] subimg_q0;
input  [3:0] u;
input  [3:0] v;
input  [31:0] inv;
output  [5:0] cosMat_address0;
output   cosMat_ce0;
input  [31:0] cosMat_q0;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg subimg_ce0;
reg[5:0] cosMat_address0;
reg cosMat_ce0;

(* fsm_encoding = "none" *) reg   [28:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
wire   [63:0] grp_fu_135_p1;
reg   [63:0] reg_152;
wire   [0:0] ap_CS_fsm_state7;
reg   [0:0] tmp_reg_404;
reg   [63:0] reg_157;
wire   [0:0] ap_CS_fsm_state9;
wire   [0:0] ap_CS_fsm_state17;
wire   [0:0] ap_CS_fsm_state24;
wire   [63:0] grp_fu_144_p2;
reg   [63:0] reg_163;
wire   [0:0] ap_CS_fsm_state12;
wire   [0:0] ap_CS_fsm_state16;
wire   [0:0] ap_CS_fsm_state20;
reg   [63:0] reg_168;
wire   [0:0] ap_CS_fsm_state13;
wire   [0:0] ap_CS_fsm_state21;
wire   [0:0] tmp_fu_173_p2;
wire   [0:0] tmp_i_fu_179_p2;
reg   [0:0] tmp_i_reg_409;
wire   [0:0] tmp_i1_fu_185_p2;
reg   [0:0] tmp_i1_reg_414;
wire   [63:0] tmp_4_fu_196_p3;
wire   [0:0] ap_CS_fsm_state2;
wire   [63:0] tmp_6_fu_204_p3;
wire   [7:0] v_cast2_cast_fu_212_p1;
reg   [7:0] v_cast2_cast_reg_429;
wire   [0:0] ap_CS_fsm_state5;
wire   [7:0] tmp_19_cast_fu_222_p1;
reg   [7:0] tmp_19_cast_reg_434;
wire   [7:0] u_cast1_cast_fu_226_p1;
reg   [7:0] u_cast1_cast_reg_439;
wire   [7:0] tmp_21_cast_fu_236_p1;
reg   [7:0] tmp_21_cast_reg_444;
reg   [63:0] tmp_7_reg_449;
wire   [7:0] tmp_23_cast_fu_252_p1;
reg   [7:0] tmp_23_cast_reg_454;
wire   [0:0] ap_CS_fsm_state6;
wire   [3:0] x_fu_282_p2;
reg   [3:0] x_reg_472;
wire   [0:0] tmp_i2_fu_288_p2;
reg   [0:0] tmp_i2_reg_477;
wire   [0:0] exitcond1_fu_276_p2;
wire   [63:0] tmp_2_fu_294_p3;
reg   [63:0] tmp_2_reg_482;
wire   [0:0] ap_CS_fsm_state8;
reg   [5:0] cosMat_addr_2_reg_492;
reg   [5:0] cosMat_addr_3_reg_497;
wire   [3:0] y_fu_353_p2;
reg   [3:0] y_reg_505;
wire   [0:0] tmp_i3_fu_359_p2;
reg   [0:0] tmp_i3_reg_510;
wire   [0:0] exitcond_fu_347_p2;
wire   [63:0] tmp_12_fu_365_p3;
reg   [63:0] tmp_16_reg_520;
wire   [63:0] G_2_in_v_fu_373_p3;
reg   [63:0] G_2_in_v_reg_525;
wire   [63:0] grp_fu_140_p2;
reg   [63:0] G_2_in_reg_530;
wire   [0:0] ap_CS_fsm_state28;
reg   [3:0] x_assign_reg_110;
reg   [3:0] x_assign_1_reg_121;
wire   [0:0] ap_CS_fsm_state29;
wire   [31:0] tmp_24_cast_fu_261_p1;
wire   [31:0] tmp_25_cast_fu_271_p1;
wire   [31:0] tmp_26_cast_fu_310_p1;
wire   [31:0] tmp_27_cast_fu_320_p1;
wire   [31:0] tmp_30_cast_fu_342_p1;
reg   [31:0] G_fu_42;
wire   [31:0] G_1_fu_132_p1;
wire   [0:0] ap_CS_fsm_state19;
reg   [31:0] grp_fu_135_p0;
wire   [0:0] ap_CS_fsm_state25;
reg   [63:0] grp_fu_144_p0;
reg   [63:0] grp_fu_144_p1;
wire   [0:0] ap_CS_fsm_state10;
wire   [0:0] ap_CS_fsm_state14;
wire   [0:0] ap_CS_fsm_state18;
wire   [6:0] tmp_18_fu_215_p3;
wire   [6:0] tmp_19_fu_229_p3;
wire   [6:0] tmp_20_fu_244_p3;
wire   [7:0] x_assign_cast2_cast_fu_240_p1;
wire   [7:0] tmp_21_fu_256_p2;
wire   [7:0] tmp_22_fu_266_p2;
wire   [7:0] x_assign_1_cast1_cas_fu_301_p1;
wire   [7:0] tmp_23_fu_305_p2;
wire   [7:0] tmp_24_fu_315_p2;
wire   [6:0] tmp_25_fu_325_p3;
wire   [7:0] tmp_29_cast_fu_333_p1;
wire   [7:0] tmp_26_fu_337_p2;
reg   [28:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 29'b1;
end

DCT_8x8_2D_fptrunbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
DCT_8x8_2D_fptrunbkb_U0(
    .din0(G_2_in_reg_530),
    .dout(G_1_fu_132_p1)
);

DCT_8x8_2D_fpext_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
DCT_8x8_2D_fpext_cud_U1(
    .din0(grp_fu_135_p0),
    .dout(grp_fu_135_p1)
);

DCT_8x8_2D_dadd_6dEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
DCT_8x8_2D_dadd_6dEe_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_157),
    .din1(G_2_in_v_reg_525),
    .ce(1'b1),
    .dout(grp_fu_140_p2)
);

DCT_8x8_2D_dmul_6eOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
DCT_8x8_2D_dmul_6eOg_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_144_p0),
    .din1(grp_fu_144_p1),
    .ce(1'b1),
    .dout(grp_fu_144_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        G_fu_42 <= G_1_fu_132_p1;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        G_fu_42 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        x_assign_1_reg_121 <= ap_const_lv4_0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        x_assign_1_reg_121 <= y_reg_505;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == exitcond_fu_347_p2))) begin
        x_assign_reg_110 <= x_reg_472;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        x_assign_reg_110 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        G_2_in_reg_530 <= grp_fu_140_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        G_2_in_v_reg_525 <= G_2_in_v_fu_373_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(tmp_reg_404 == 1'b0) & (1'b1 == ap_CS_fsm_state8))) begin
        cosMat_addr_2_reg_492 <= tmp_27_cast_fu_320_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_404 == 1'b0) & (1'b1 == ap_CS_fsm_state8))) begin
        cosMat_addr_3_reg_497 <= tmp_30_cast_fu_342_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state7) & ~(tmp_reg_404 == 1'b0)) | ((1'b1 == ap_CS_fsm_state7) & (tmp_reg_404 == 1'b0)))) begin
        reg_152 <= grp_fu_135_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) | (~(tmp_reg_404 == 1'b0) & (1'b1 == ap_CS_fsm_state17)) | (1'b1 == ap_CS_fsm_state24))) begin
        reg_157 <= grp_fu_135_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_reg_404 == 1'b0) & (1'b1 == ap_CS_fsm_state12)) | ((tmp_reg_404 == 1'b0) & (1'b1 == ap_CS_fsm_state16)) | ((tmp_reg_404 == 1'b0) & (1'b1 == ap_CS_fsm_state20)))) begin
        reg_163 <= grp_fu_144_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~(tmp_reg_404 == 1'b0) & (1'b1 == ap_CS_fsm_state17)) | (~(tmp_reg_404 == 1'b0) & (1'b1 == ap_CS_fsm_state13)) | (~(tmp_reg_404 == 1'b0) & (1'b1 == ap_CS_fsm_state21)))) begin
        reg_168 <= grp_fu_144_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_404 == 1'b0) & (1'b1 == ap_CS_fsm_state20))) begin
        tmp_16_reg_520 <= grp_fu_135_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(tmp_reg_404 == 1'b0) & (1'b1 == ap_CS_fsm_state5))) begin
        tmp_19_cast_reg_434[6 : 3] <= tmp_19_cast_fu_222_p1[6 : 3];
        tmp_21_cast_reg_444[6 : 3] <= tmp_21_cast_fu_236_p1[6 : 3];
        tmp_7_reg_449 <= grp_fu_144_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_23_cast_reg_454[6 : 3] <= tmp_23_cast_fu_252_p1[6 : 3];
        x_reg_472 <= x_fu_282_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (tmp_reg_404 == 1'b0))) begin
        tmp_2_reg_482[30 : 29] <= tmp_2_fu_294_p3[30 : 29];
tmp_2_reg_482[36 : 33] <= tmp_2_fu_294_p3[36 : 33];
tmp_2_reg_482[39] <= tmp_2_fu_294_p3[39];
tmp_2_reg_482[45] <= tmp_2_fu_294_p3[45];
tmp_2_reg_482[47] <= tmp_2_fu_294_p3[47];
tmp_2_reg_482[50 : 49] <= tmp_2_fu_294_p3[50 : 49];
tmp_2_reg_482[52] <= tmp_2_fu_294_p3[52];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_start == 1'b0))) begin
        tmp_i1_reg_414 <= tmp_i1_fu_185_p2;
        tmp_i_reg_409 <= tmp_i_fu_179_p2;
        tmp_reg_404 <= tmp_fu_173_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_404 == 1'b0) & (1'b1 == ap_CS_fsm_state6) & (1'b0 == exitcond1_fu_276_p2))) begin
        tmp_i2_reg_477 <= tmp_i2_fu_288_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_404 == 1'b0) & (1'b1 == ap_CS_fsm_state8) & (1'b0 == exitcond_fu_347_p2))) begin
        tmp_i3_reg_510 <= tmp_i3_fu_359_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_404 == 1'b0) & (1'b1 == ap_CS_fsm_state5))) begin
        u_cast1_cast_reg_439[3 : 0] <= u_cast1_cast_fu_226_p1[3 : 0];
        v_cast2_cast_reg_429[3 : 0] <= v_cast2_cast_fu_212_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        y_reg_505 <= y_fu_353_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1)) | ((1'b1 == ap_CS_fsm_state6) & ~(1'b0 == exitcond1_fu_276_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & ~(1'b0 == exitcond1_fu_276_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        cosMat_address0 = cosMat_addr_3_reg_497;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        cosMat_address0 = cosMat_addr_2_reg_492;
    end else if (((tmp_reg_404 == 1'b0) & (1'b1 == ap_CS_fsm_state6) & (1'b0 == exitcond1_fu_276_p2))) begin
        cosMat_address0 = tmp_25_cast_fu_271_p1;
    end else if ((~(tmp_reg_404 == 1'b0) & (1'b1 == ap_CS_fsm_state6) & (1'b0 == exitcond1_fu_276_p2))) begin
        cosMat_address0 = tmp_24_cast_fu_261_p1;
    end else begin
        cosMat_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((tmp_reg_404 == 1'b0) & (1'b1 == ap_CS_fsm_state6) & (1'b0 == exitcond1_fu_276_p2)) | (~(tmp_reg_404 == 1'b0) & (1'b1 == ap_CS_fsm_state6) & (1'b0 == exitcond1_fu_276_p2)) | (1'b1 == ap_CS_fsm_state19))) begin
        cosMat_ce0 = 1'b1;
    end else begin
        cosMat_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_135_p0 = G_fu_42;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_135_p0 = subimg_q0;
    end else if ((((1'b1 == ap_CS_fsm_state7) & ~(tmp_reg_404 == 1'b0)) | ((1'b1 == ap_CS_fsm_state7) & (tmp_reg_404 == 1'b0)) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_135_p0 = cosMat_q0;
    end else begin
        grp_fu_135_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_144_p0 = reg_168;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_fu_144_p0 = reg_163;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_144_p0 = tmp_7_reg_449;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_144_p0 = tmp_2_reg_482;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_144_p0 = tmp_4_fu_196_p3;
    end else begin
        grp_fu_144_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_144_p1 = tmp_16_reg_520;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_144_p1 = reg_152;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_144_p1 = reg_157;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_144_p1 = tmp_12_fu_365_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_144_p1 = tmp_6_fu_204_p3;
    end else begin
        grp_fu_144_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        subimg_ce0 = 1'b1;
    end else begin
        subimg_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (~(1'b0 == exitcond1_fu_276_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (~(1'b0 == exitcond_fu_347_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign G_2_in_v_fu_373_p3 = ((tmp_reg_404[0:0] === 1'b1) ? reg_168 : grp_fu_144_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state12 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_state13 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_state14 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_state16 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_state17 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_state18 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_state19 = ap_CS_fsm[ap_const_lv32_12];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state20 = ap_CS_fsm[ap_const_lv32_13];

assign ap_CS_fsm_state21 = ap_CS_fsm[ap_const_lv32_14];

assign ap_CS_fsm_state24 = ap_CS_fsm[ap_const_lv32_17];

assign ap_CS_fsm_state25 = ap_CS_fsm[ap_const_lv32_18];

assign ap_CS_fsm_state28 = ap_CS_fsm[ap_const_lv32_1B];

assign ap_CS_fsm_state29 = ap_CS_fsm[ap_const_lv32_1C];

assign ap_CS_fsm_state5 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state6 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state7 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state8 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state9 = ap_CS_fsm[ap_const_lv32_8];

assign ap_return = G_fu_42;

assign exitcond1_fu_276_p2 = ((x_assign_reg_110 == ap_const_lv4_8) ? 1'b1 : 1'b0);

assign exitcond_fu_347_p2 = ((x_assign_1_reg_121 == ap_const_lv4_8) ? 1'b1 : 1'b0);

assign subimg_address0 = tmp_26_cast_fu_310_p1;

assign tmp_12_fu_365_p3 = ((tmp_i3_reg_510[0:0] === 1'b1) ? ap_const_lv64_3FE6A09E60000000 : ap_const_lv64_3FF0000000000000);

assign tmp_18_fu_215_p3 = {{v}, {ap_const_lv3_0}};

assign tmp_19_cast_fu_222_p1 = tmp_18_fu_215_p3;

assign tmp_19_fu_229_p3 = {{u}, {ap_const_lv3_0}};

assign tmp_20_fu_244_p3 = {{x_assign_reg_110}, {ap_const_lv3_0}};

assign tmp_21_cast_fu_236_p1 = tmp_19_fu_229_p3;

assign tmp_21_fu_256_p2 = (x_assign_cast2_cast_fu_240_p1 + tmp_21_cast_reg_444);

assign tmp_22_fu_266_p2 = (u_cast1_cast_reg_439 + tmp_23_cast_fu_252_p1);

assign tmp_23_cast_fu_252_p1 = tmp_20_fu_244_p3;

assign tmp_23_fu_305_p2 = (x_assign_1_cast1_cas_fu_301_p1 + tmp_23_cast_reg_454);

assign tmp_24_cast_fu_261_p1 = tmp_21_fu_256_p2;

assign tmp_24_fu_315_p2 = (x_assign_1_cast1_cas_fu_301_p1 + tmp_19_cast_reg_434);

assign tmp_25_cast_fu_271_p1 = tmp_22_fu_266_p2;

assign tmp_25_fu_325_p3 = {{x_assign_1_reg_121}, {ap_const_lv3_0}};

assign tmp_26_cast_fu_310_p1 = tmp_23_fu_305_p2;

assign tmp_26_fu_337_p2 = (v_cast2_cast_reg_429 + tmp_29_cast_fu_333_p1);

assign tmp_27_cast_fu_320_p1 = tmp_24_fu_315_p2;

assign tmp_29_cast_fu_333_p1 = tmp_25_fu_325_p3;

assign tmp_2_fu_294_p3 = ((tmp_i2_reg_477[0:0] === 1'b1) ? ap_const_lv64_3FC6A09E60000000 : ap_const_lv64_3FD0000000000000);

assign tmp_30_cast_fu_342_p1 = tmp_26_fu_337_p2;

assign tmp_4_fu_196_p3 = ((tmp_i_reg_409[0:0] === 1'b1) ? ap_const_lv64_3FC6A09E60000000 : ap_const_lv64_3FD0000000000000);

assign tmp_6_fu_204_p3 = ((tmp_i1_reg_414[0:0] === 1'b1) ? ap_const_lv64_3FE6A09E60000000 : ap_const_lv64_3FF0000000000000);

assign tmp_fu_173_p2 = ((inv == ap_const_lv32_0) ? 1'b1 : 1'b0);

assign tmp_i1_fu_185_p2 = ((v == ap_const_lv4_0) ? 1'b1 : 1'b0);

assign tmp_i2_fu_288_p2 = ((x_assign_reg_110 == ap_const_lv4_0) ? 1'b1 : 1'b0);

assign tmp_i3_fu_359_p2 = ((x_assign_1_reg_121 == ap_const_lv4_0) ? 1'b1 : 1'b0);

assign tmp_i_fu_179_p2 = ((u == ap_const_lv4_0) ? 1'b1 : 1'b0);

assign u_cast1_cast_fu_226_p1 = u;

assign v_cast2_cast_fu_212_p1 = v;

assign x_assign_1_cast1_cas_fu_301_p1 = x_assign_1_reg_121;

assign x_assign_cast2_cast_fu_240_p1 = x_assign_reg_110;

assign x_fu_282_p2 = (x_assign_reg_110 + ap_const_lv4_1);

assign y_fu_353_p2 = (x_assign_1_reg_121 + ap_const_lv4_1);

always @ (posedge ap_clk) begin
    v_cast2_cast_reg_429[7:4] <= 4'b0000;
    tmp_19_cast_reg_434[2:0] <= 3'b000;
    tmp_19_cast_reg_434[7] <= 1'b0;
    u_cast1_cast_reg_439[7:4] <= 4'b0000;
    tmp_21_cast_reg_444[2:0] <= 3'b000;
    tmp_21_cast_reg_444[7] <= 1'b0;
    tmp_23_cast_reg_454[2:0] <= 3'b000;
    tmp_23_cast_reg_454[7] <= 1'b0;
    tmp_2_reg_482[28:0] <= 29'b00000000000000000000000000000;
    tmp_2_reg_482[32:31] <= 2'b00;
    tmp_2_reg_482[38:37] <= 2'b00;
    tmp_2_reg_482[44:40] <= 5'b00000;
    tmp_2_reg_482[46:46] <= 1'b0;
    tmp_2_reg_482[48:48] <= 1'b0;
    tmp_2_reg_482[51:51] <= 1'b0;
    tmp_2_reg_482[63:53] <= 11'b00111111110;
end

endmodule //singleGUV
