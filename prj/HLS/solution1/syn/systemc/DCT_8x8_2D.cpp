// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "DCT_8x8_2D.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic DCT_8x8_2D::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic DCT_8x8_2D::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> DCT_8x8_2D::ap_ST_fsm_state1 = "1";
const sc_lv<10> DCT_8x8_2D::ap_ST_fsm_state2 = "10";
const sc_lv<10> DCT_8x8_2D::ap_ST_fsm_state3 = "100";
const sc_lv<10> DCT_8x8_2D::ap_ST_fsm_state4 = "1000";
const sc_lv<10> DCT_8x8_2D::ap_ST_fsm_state5 = "10000";
const sc_lv<10> DCT_8x8_2D::ap_ST_fsm_state6 = "100000";
const sc_lv<10> DCT_8x8_2D::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> DCT_8x8_2D::ap_ST_fsm_state8 = "10000000";
const sc_lv<10> DCT_8x8_2D::ap_ST_fsm_state9 = "100000000";
const sc_lv<10> DCT_8x8_2D::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> DCT_8x8_2D::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> DCT_8x8_2D::ap_const_lv1_1 = "1";
const sc_lv<32> DCT_8x8_2D::ap_const_lv32_1 = "1";
const sc_lv<1> DCT_8x8_2D::ap_const_lv1_0 = "0";
const sc_lv<32> DCT_8x8_2D::ap_const_lv32_2 = "10";
const sc_lv<32> DCT_8x8_2D::ap_const_lv32_3 = "11";
const sc_lv<32> DCT_8x8_2D::ap_const_lv32_7 = "111";
const sc_lv<32> DCT_8x8_2D::ap_const_lv32_8 = "1000";
const sc_lv<4> DCT_8x8_2D::ap_const_lv4_0 = "0000";
const sc_lv<32> DCT_8x8_2D::ap_const_lv32_6 = "110";
const sc_lv<32> DCT_8x8_2D::ap_const_lv32_9 = "1001";
const sc_lv<32> DCT_8x8_2D::ap_const_lv32_C3000000 = "11000011000000000000000000000000";
const sc_lv<3> DCT_8x8_2D::ap_const_lv3_0 = "000";
const sc_lv<4> DCT_8x8_2D::ap_const_lv4_8 = "1000";
const sc_lv<4> DCT_8x8_2D::ap_const_lv4_1 = "1";

DCT_8x8_2D::DCT_8x8_2D(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_singleGUV_fu_121 = new singleGUV("grp_singleGUV_fu_121");
    grp_singleGUV_fu_121->ap_clk(ap_clk);
    grp_singleGUV_fu_121->ap_rst(ap_rst);
    grp_singleGUV_fu_121->ap_start(grp_singleGUV_fu_121_ap_start);
    grp_singleGUV_fu_121->ap_done(grp_singleGUV_fu_121_ap_done);
    grp_singleGUV_fu_121->ap_idle(grp_singleGUV_fu_121_ap_idle);
    grp_singleGUV_fu_121->ap_ready(grp_singleGUV_fu_121_ap_ready);
    grp_singleGUV_fu_121->subimg_address0(grp_singleGUV_fu_121_subimg_address0);
    grp_singleGUV_fu_121->subimg_ce0(grp_singleGUV_fu_121_subimg_ce0);
    grp_singleGUV_fu_121->subimg_q0(subimg_q0);
    grp_singleGUV_fu_121->u(i_reg_97);
    grp_singleGUV_fu_121->v(j_reg_109);
    grp_singleGUV_fu_121->inv(inv);
    grp_singleGUV_fu_121->cosMat_address0(grp_singleGUV_fu_121_cosMat_address0);
    grp_singleGUV_fu_121->cosMat_ce0(grp_singleGUV_fu_121_cosMat_ce0);
    grp_singleGUV_fu_121->cosMat_q0(cosMat_q0);
    grp_singleGUV_fu_121->ap_return(grp_singleGUV_fu_121_ap_return);
    DCT_8x8_2D_fadd_3fYi_U9 = new DCT_8x8_2D_fadd_3fYi<1,4,32,32,32>("DCT_8x8_2D_fadd_3fYi_U9");
    DCT_8x8_2D_fadd_3fYi_U9->clk(ap_clk);
    DCT_8x8_2D_fadd_3fYi_U9->reset(ap_rst);
    DCT_8x8_2D_fadd_3fYi_U9->din0(subimg_q0);
    DCT_8x8_2D_fadd_3fYi_U9->din1(ap_var_for_const0);
    DCT_8x8_2D_fadd_3fYi_U9->ce(ap_var_for_const1);
    DCT_8x8_2D_fadd_3fYi_U9->dout(grp_fu_135_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_G_address0);
    sensitive << ( G_addr_reg_301 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_G_ce0);
    sensitive << ( grp_singleGUV_fu_121_ap_done );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_G_d0);
    sensitive << ( grp_singleGUV_fu_121_ap_return );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_G_we0);
    sensitive << ( grp_singleGUV_fu_121_ap_done );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond1_fu_210_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond1_fu_210_p2 );

    SC_METHOD(thread_cosMat_address0);
    sensitive << ( grp_singleGUV_fu_121_cosMat_address0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_cosMat_ce0);
    sensitive << ( grp_singleGUV_fu_121_cosMat_ce0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_exitcond1_fu_210_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i_reg_97 );

    SC_METHOD(thread_exitcond1_i_fu_160_p2);
    sensitive << ( tmp_reg_253 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_i_reg_75 );

    SC_METHOD(thread_exitcond_fu_236_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( j_reg_109 );

    SC_METHOD(thread_exitcond_i_fu_186_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_i_reg_86 );

    SC_METHOD(thread_grp_singleGUV_fu_121_ap_start);
    sensitive << ( ap_reg_grp_singleGUV_fu_121_ap_start );

    SC_METHOD(thread_i_1_fu_166_p2);
    sensitive << ( i_i_reg_75 );

    SC_METHOD(thread_i_2_fu_216_p2);
    sensitive << ( i_reg_97 );

    SC_METHOD(thread_j_1_fu_192_p2);
    sensitive << ( j_i_reg_86 );

    SC_METHOD(thread_j_2_fu_242_p2);
    sensitive << ( j_reg_109 );

    SC_METHOD(thread_j_cast1_cast_fu_222_p1);
    sensitive << ( j_reg_109 );

    SC_METHOD(thread_j_i_cast3_cast_fu_172_p1);
    sensitive << ( j_i_reg_86 );

    SC_METHOD(thread_subimg_address0);
    sensitive << ( subimg_addr_reg_270 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_singleGUV_fu_121_subimg_address0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_33_cast_fu_181_p1 );

    SC_METHOD(thread_subimg_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_singleGUV_fu_121_subimg_ce0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_subimg_d0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_fu_135_p2 );

    SC_METHOD(thread_subimg_we0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp_27_fu_176_p2);
    sensitive << ( tmp_32_cast_reg_257 );
    sensitive << ( j_i_cast3_cast_fu_172_p1 );

    SC_METHOD(thread_tmp_28_fu_198_p3);
    sensitive << ( i_reg_97 );

    SC_METHOD(thread_tmp_29_fu_226_p2);
    sensitive << ( tmp_35_cast_reg_288 );
    sensitive << ( j_cast1_cast_fu_222_p1 );

    SC_METHOD(thread_tmp_32_cast_fu_156_p1);
    sensitive << ( tmp_s_fu_148_p3 );

    SC_METHOD(thread_tmp_33_cast_fu_181_p1);
    sensitive << ( tmp_27_fu_176_p2 );

    SC_METHOD(thread_tmp_35_cast_fu_206_p1);
    sensitive << ( tmp_28_fu_198_p3 );

    SC_METHOD(thread_tmp_36_cast_fu_231_p1);
    sensitive << ( tmp_29_fu_226_p2 );

    SC_METHOD(thread_tmp_fu_142_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( shift );

    SC_METHOD(thread_tmp_s_fu_148_p3);
    sensitive << ( i_i_reg_75 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_reg_253 );
    sensitive << ( grp_singleGUV_fu_121_ap_done );
    sensitive << ( exitcond_i_fu_186_p2 );
    sensitive << ( exitcond1_i_fu_160_p2 );
    sensitive << ( exitcond_fu_236_p2 );
    sensitive << ( exitcond1_fu_210_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000001";
    ap_reg_grp_singleGUV_fu_121_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "DCT_8x8_2D_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, G_address0, "(port)G_address0");
    sc_trace(mVcdFile, G_ce0, "(port)G_ce0");
    sc_trace(mVcdFile, G_we0, "(port)G_we0");
    sc_trace(mVcdFile, G_d0, "(port)G_d0");
    sc_trace(mVcdFile, subimg_address0, "(port)subimg_address0");
    sc_trace(mVcdFile, subimg_ce0, "(port)subimg_ce0");
    sc_trace(mVcdFile, subimg_we0, "(port)subimg_we0");
    sc_trace(mVcdFile, subimg_d0, "(port)subimg_d0");
    sc_trace(mVcdFile, subimg_q0, "(port)subimg_q0");
    sc_trace(mVcdFile, shift, "(port)shift");
    sc_trace(mVcdFile, inv, "(port)inv");
    sc_trace(mVcdFile, cosMat_address0, "(port)cosMat_address0");
    sc_trace(mVcdFile, cosMat_ce0, "(port)cosMat_ce0");
    sc_trace(mVcdFile, cosMat_q0, "(port)cosMat_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_fu_142_p2, "tmp_fu_142_p2");
    sc_trace(mVcdFile, tmp_reg_253, "tmp_reg_253");
    sc_trace(mVcdFile, tmp_32_cast_fu_156_p1, "tmp_32_cast_fu_156_p1");
    sc_trace(mVcdFile, tmp_32_cast_reg_257, "tmp_32_cast_reg_257");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_1_fu_166_p2, "i_1_fu_166_p2");
    sc_trace(mVcdFile, i_1_reg_265, "i_1_reg_265");
    sc_trace(mVcdFile, subimg_addr_reg_270, "subimg_addr_reg_270");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, j_1_fu_192_p2, "j_1_fu_192_p2");
    sc_trace(mVcdFile, j_1_reg_278, "j_1_reg_278");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_35_cast_fu_206_p1, "tmp_35_cast_fu_206_p1");
    sc_trace(mVcdFile, tmp_35_cast_reg_288, "tmp_35_cast_reg_288");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, i_2_fu_216_p2, "i_2_fu_216_p2");
    sc_trace(mVcdFile, i_2_reg_296, "i_2_reg_296");
    sc_trace(mVcdFile, G_addr_reg_301, "G_addr_reg_301");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, j_2_fu_242_p2, "j_2_fu_242_p2");
    sc_trace(mVcdFile, j_2_reg_309, "j_2_reg_309");
    sc_trace(mVcdFile, grp_singleGUV_fu_121_ap_start, "grp_singleGUV_fu_121_ap_start");
    sc_trace(mVcdFile, grp_singleGUV_fu_121_ap_done, "grp_singleGUV_fu_121_ap_done");
    sc_trace(mVcdFile, grp_singleGUV_fu_121_ap_idle, "grp_singleGUV_fu_121_ap_idle");
    sc_trace(mVcdFile, grp_singleGUV_fu_121_ap_ready, "grp_singleGUV_fu_121_ap_ready");
    sc_trace(mVcdFile, grp_singleGUV_fu_121_subimg_address0, "grp_singleGUV_fu_121_subimg_address0");
    sc_trace(mVcdFile, grp_singleGUV_fu_121_subimg_ce0, "grp_singleGUV_fu_121_subimg_ce0");
    sc_trace(mVcdFile, grp_singleGUV_fu_121_cosMat_address0, "grp_singleGUV_fu_121_cosMat_address0");
    sc_trace(mVcdFile, grp_singleGUV_fu_121_cosMat_ce0, "grp_singleGUV_fu_121_cosMat_ce0");
    sc_trace(mVcdFile, grp_singleGUV_fu_121_ap_return, "grp_singleGUV_fu_121_ap_return");
    sc_trace(mVcdFile, i_i_reg_75, "i_i_reg_75");
    sc_trace(mVcdFile, exitcond_i_fu_186_p2, "exitcond_i_fu_186_p2");
    sc_trace(mVcdFile, j_i_reg_86, "j_i_reg_86");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, exitcond1_i_fu_160_p2, "exitcond1_i_fu_160_p2");
    sc_trace(mVcdFile, i_reg_97, "i_reg_97");
    sc_trace(mVcdFile, exitcond_fu_236_p2, "exitcond_fu_236_p2");
    sc_trace(mVcdFile, j_reg_109, "j_reg_109");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, exitcond1_fu_210_p2, "exitcond1_fu_210_p2");
    sc_trace(mVcdFile, ap_reg_grp_singleGUV_fu_121_ap_start, "ap_reg_grp_singleGUV_fu_121_ap_start");
    sc_trace(mVcdFile, tmp_33_cast_fu_181_p1, "tmp_33_cast_fu_181_p1");
    sc_trace(mVcdFile, tmp_36_cast_fu_231_p1, "tmp_36_cast_fu_231_p1");
    sc_trace(mVcdFile, grp_fu_135_p2, "grp_fu_135_p2");
    sc_trace(mVcdFile, tmp_s_fu_148_p3, "tmp_s_fu_148_p3");
    sc_trace(mVcdFile, j_i_cast3_cast_fu_172_p1, "j_i_cast3_cast_fu_172_p1");
    sc_trace(mVcdFile, tmp_27_fu_176_p2, "tmp_27_fu_176_p2");
    sc_trace(mVcdFile, tmp_28_fu_198_p3, "tmp_28_fu_198_p3");
    sc_trace(mVcdFile, j_cast1_cast_fu_222_p1, "j_cast1_cast_fu_222_p1");
    sc_trace(mVcdFile, tmp_29_fu_226_p2, "tmp_29_fu_226_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("DCT_8x8_2D.hdltvin.dat");
    mHdltvoutHandle.open("DCT_8x8_2D.hdltvout.dat");
}

DCT_8x8_2D::~DCT_8x8_2D() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_singleGUV_fu_121;
    delete DCT_8x8_2D_fadd_3fYi_U9;
}

void DCT_8x8_2D::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_1;
}

void DCT_8x8_2D::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv32_C3000000;
}

void DCT_8x8_2D::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_grp_singleGUV_fu_121_ap_start = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_236_p2.read()))) {
            ap_reg_grp_singleGUV_fu_121_ap_start = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_singleGUV_fu_121_ap_ready.read())) {
            ap_reg_grp_singleGUV_fu_121_ap_start = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         !esl_seteq<1,1,1>(tmp_fu_142_p2.read(), ap_const_lv1_0))) {
        i_i_reg_75 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_186_p2.read()))) {
        i_i_reg_75 = i_1_reg_265.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_236_p2.read()))) {
        i_reg_97 = i_2_reg_296.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
                (esl_seteq<1,1,1>(tmp_reg_253.read(), ap_const_lv1_0) || 
                 !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i_fu_160_p2.read())))) {
        i_reg_97 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         !esl_seteq<1,1,1>(tmp_reg_253.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i_fu_160_p2.read()))) {
        j_i_reg_86 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        j_i_reg_86 = j_1_reg_278.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_210_p2.read()))) {
        j_reg_109 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && 
                !esl_seteq<1,1,1>(ap_const_logic_0, grp_singleGUV_fu_121_ap_done.read()))) {
        j_reg_109 = j_2_reg_309.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        G_addr_reg_301 =  (sc_lv<6>) (tmp_36_cast_fu_231_p1.read());
        j_2_reg_309 = j_2_fu_242_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && !esl_seteq<1,1,1>(tmp_reg_253.read(), ap_const_lv1_0))) {
        i_1_reg_265 = i_1_fu_166_p2.read();
        tmp_32_cast_reg_257 = tmp_32_cast_fu_156_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()))) {
        i_2_reg_296 = i_2_fu_216_p2.read();
        tmp_35_cast_reg_288 = tmp_35_cast_fu_206_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        j_1_reg_278 = j_1_fu_192_p2.read();
        subimg_addr_reg_270 =  (sc_lv<6>) (tmp_33_cast_fu_181_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        tmp_reg_253 = tmp_fu_142_p2.read();
    }
}

void DCT_8x8_2D::thread_G_address0() {
    G_address0 = G_addr_reg_301.read();
}

void DCT_8x8_2D::thread_G_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && 
         !esl_seteq<1,1,1>(ap_const_logic_0, grp_singleGUV_fu_121_ap_done.read()))) {
        G_ce0 = ap_const_logic_1;
    } else {
        G_ce0 = ap_const_logic_0;
    }
}

void DCT_8x8_2D::thread_G_d0() {
    G_d0 = grp_singleGUV_fu_121_ap_return.read();
}

void DCT_8x8_2D::thread_G_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && 
          !esl_seteq<1,1,1>(ap_const_logic_0, grp_singleGUV_fu_121_ap_done.read())))) {
        G_we0 = ap_const_logic_1;
    } else {
        G_we0 = ap_const_logic_0;
    }
}

void DCT_8x8_2D::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void DCT_8x8_2D::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read().range(9, 9);
}

void DCT_8x8_2D::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void DCT_8x8_2D::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read().range(2, 2);
}

void DCT_8x8_2D::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(3, 3);
}

void DCT_8x8_2D::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read().range(6, 6);
}

void DCT_8x8_2D::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read().range(7, 7);
}

void DCT_8x8_2D::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read().range(8, 8);
}

void DCT_8x8_2D::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_210_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void DCT_8x8_2D::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void DCT_8x8_2D::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_210_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void DCT_8x8_2D::thread_cosMat_address0() {
    cosMat_address0 = grp_singleGUV_fu_121_cosMat_address0.read();
}

void DCT_8x8_2D::thread_cosMat_ce0() {
    cosMat_ce0 = grp_singleGUV_fu_121_cosMat_ce0.read();
}

void DCT_8x8_2D::thread_exitcond1_fu_210_p2() {
    exitcond1_fu_210_p2 = (!i_reg_97.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_97.read() == ap_const_lv4_8);
}

void DCT_8x8_2D::thread_exitcond1_i_fu_160_p2() {
    exitcond1_i_fu_160_p2 = (!i_i_reg_75.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_75.read() == ap_const_lv4_8);
}

void DCT_8x8_2D::thread_exitcond_fu_236_p2() {
    exitcond_fu_236_p2 = (!j_reg_109.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_109.read() == ap_const_lv4_8);
}

void DCT_8x8_2D::thread_exitcond_i_fu_186_p2() {
    exitcond_i_fu_186_p2 = (!j_i_reg_86.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_i_reg_86.read() == ap_const_lv4_8);
}

void DCT_8x8_2D::thread_grp_singleGUV_fu_121_ap_start() {
    grp_singleGUV_fu_121_ap_start = ap_reg_grp_singleGUV_fu_121_ap_start.read();
}

void DCT_8x8_2D::thread_i_1_fu_166_p2() {
    i_1_fu_166_p2 = (!i_i_reg_75.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_i_reg_75.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void DCT_8x8_2D::thread_i_2_fu_216_p2() {
    i_2_fu_216_p2 = (!i_reg_97.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_97.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void DCT_8x8_2D::thread_j_1_fu_192_p2() {
    j_1_fu_192_p2 = (!j_i_reg_86.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_i_reg_86.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void DCT_8x8_2D::thread_j_2_fu_242_p2() {
    j_2_fu_242_p2 = (!j_reg_109.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_reg_109.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void DCT_8x8_2D::thread_j_cast1_cast_fu_222_p1() {
    j_cast1_cast_fu_222_p1 = esl_zext<8,4>(j_reg_109.read());
}

void DCT_8x8_2D::thread_j_i_cast3_cast_fu_172_p1() {
    j_i_cast3_cast_fu_172_p1 = esl_zext<8,4>(j_i_reg_86.read());
}

void DCT_8x8_2D::thread_subimg_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        subimg_address0 = subimg_addr_reg_270.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        subimg_address0 =  (sc_lv<6>) (tmp_33_cast_fu_181_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        subimg_address0 = grp_singleGUV_fu_121_subimg_address0.read();
    } else {
        subimg_address0 = "XXXXXX";
    }
}

void DCT_8x8_2D::thread_subimg_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read())))) {
        subimg_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        subimg_ce0 = grp_singleGUV_fu_121_subimg_ce0.read();
    } else {
        subimg_ce0 = ap_const_logic_0;
    }
}

void DCT_8x8_2D::thread_subimg_d0() {
    subimg_d0 = grp_fu_135_p2.read();
}

void DCT_8x8_2D::thread_subimg_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read())))) {
        subimg_we0 = ap_const_logic_1;
    } else {
        subimg_we0 = ap_const_logic_0;
    }
}

void DCT_8x8_2D::thread_tmp_27_fu_176_p2() {
    tmp_27_fu_176_p2 = (!tmp_32_cast_reg_257.read().is_01() || !j_i_cast3_cast_fu_172_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_32_cast_reg_257.read()) + sc_biguint<8>(j_i_cast3_cast_fu_172_p1.read()));
}

void DCT_8x8_2D::thread_tmp_28_fu_198_p3() {
    tmp_28_fu_198_p3 = esl_concat<4,3>(i_reg_97.read(), ap_const_lv3_0);
}

void DCT_8x8_2D::thread_tmp_29_fu_226_p2() {
    tmp_29_fu_226_p2 = (!tmp_35_cast_reg_288.read().is_01() || !j_cast1_cast_fu_222_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_35_cast_reg_288.read()) + sc_biguint<8>(j_cast1_cast_fu_222_p1.read()));
}

void DCT_8x8_2D::thread_tmp_32_cast_fu_156_p1() {
    tmp_32_cast_fu_156_p1 = esl_zext<8,7>(tmp_s_fu_148_p3.read());
}

void DCT_8x8_2D::thread_tmp_33_cast_fu_181_p1() {
    tmp_33_cast_fu_181_p1 = esl_zext<32,8>(tmp_27_fu_176_p2.read());
}

void DCT_8x8_2D::thread_tmp_35_cast_fu_206_p1() {
    tmp_35_cast_fu_206_p1 = esl_zext<8,7>(tmp_28_fu_198_p3.read());
}

void DCT_8x8_2D::thread_tmp_36_cast_fu_231_p1() {
    tmp_36_cast_fu_231_p1 = esl_zext<32,8>(tmp_29_fu_226_p2.read());
}

void DCT_8x8_2D::thread_tmp_fu_142_p2() {
    tmp_fu_142_p2 = (!shift.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<1>(): sc_lv<1>(shift.read() == ap_const_lv32_1);
}

void DCT_8x8_2D::thread_tmp_s_fu_148_p3() {
    tmp_s_fu_148_p3 = esl_concat<4,3>(i_i_reg_75.read(), ap_const_lv3_0);
}

void DCT_8x8_2D::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(tmp_reg_253.read(), ap_const_lv1_0) || !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_i_fu_160_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_186_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 128 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_210_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_236_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_singleGUV_fu_121_ap_done.read())) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

void DCT_8x8_2D::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"G_address0\" :  \"" << G_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"G_ce0\" :  \"" << G_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"G_we0\" :  \"" << G_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"G_d0\" :  \"" << G_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"subimg_address0\" :  \"" << subimg_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"subimg_ce0\" :  \"" << subimg_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"subimg_we0\" :  \"" << subimg_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"subimg_d0\" :  \"" << subimg_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"subimg_q0\" :  \"" << subimg_q0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"shift\" :  \"" << shift.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inv\" :  \"" << inv.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"cosMat_address0\" :  \"" << cosMat_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"cosMat_ce0\" :  \"" << cosMat_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"cosMat_q0\" :  \"" << cosMat_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

