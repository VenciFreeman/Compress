// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "singleGUV.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic singleGUV::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic singleGUV::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<29> singleGUV::ap_ST_fsm_state1 = "1";
const sc_lv<29> singleGUV::ap_ST_fsm_state2 = "10";
const sc_lv<29> singleGUV::ap_ST_fsm_state3 = "100";
const sc_lv<29> singleGUV::ap_ST_fsm_state4 = "1000";
const sc_lv<29> singleGUV::ap_ST_fsm_state5 = "10000";
const sc_lv<29> singleGUV::ap_ST_fsm_state6 = "100000";
const sc_lv<29> singleGUV::ap_ST_fsm_state7 = "1000000";
const sc_lv<29> singleGUV::ap_ST_fsm_state8 = "10000000";
const sc_lv<29> singleGUV::ap_ST_fsm_state9 = "100000000";
const sc_lv<29> singleGUV::ap_ST_fsm_state10 = "1000000000";
const sc_lv<29> singleGUV::ap_ST_fsm_state11 = "10000000000";
const sc_lv<29> singleGUV::ap_ST_fsm_state12 = "100000000000";
const sc_lv<29> singleGUV::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<29> singleGUV::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<29> singleGUV::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<29> singleGUV::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<29> singleGUV::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<29> singleGUV::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<29> singleGUV::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<29> singleGUV::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<29> singleGUV::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<29> singleGUV::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<29> singleGUV::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<29> singleGUV::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<29> singleGUV::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<29> singleGUV::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<29> singleGUV::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<29> singleGUV::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<29> singleGUV::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<32> singleGUV::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> singleGUV::ap_const_lv1_1 = "1";
const sc_lv<32> singleGUV::ap_const_lv32_6 = "110";
const sc_lv<1> singleGUV::ap_const_lv1_0 = "0";
const sc_lv<32> singleGUV::ap_const_lv32_8 = "1000";
const sc_lv<32> singleGUV::ap_const_lv32_10 = "10000";
const sc_lv<32> singleGUV::ap_const_lv32_17 = "10111";
const sc_lv<32> singleGUV::ap_const_lv32_B = "1011";
const sc_lv<32> singleGUV::ap_const_lv32_F = "1111";
const sc_lv<32> singleGUV::ap_const_lv32_13 = "10011";
const sc_lv<32> singleGUV::ap_const_lv32_C = "1100";
const sc_lv<32> singleGUV::ap_const_lv32_14 = "10100";
const sc_lv<32> singleGUV::ap_const_lv32_1 = "1";
const sc_lv<32> singleGUV::ap_const_lv32_4 = "100";
const sc_lv<32> singleGUV::ap_const_lv32_5 = "101";
const sc_lv<32> singleGUV::ap_const_lv32_7 = "111";
const sc_lv<32> singleGUV::ap_const_lv32_1B = "11011";
const sc_lv<4> singleGUV::ap_const_lv4_0 = "0000";
const sc_lv<32> singleGUV::ap_const_lv32_1C = "11100";
const sc_lv<32> singleGUV::ap_const_lv32_12 = "10010";
const sc_lv<32> singleGUV::ap_const_lv32_18 = "11000";
const sc_lv<32> singleGUV::ap_const_lv32_9 = "1001";
const sc_lv<32> singleGUV::ap_const_lv32_D = "1101";
const sc_lv<32> singleGUV::ap_const_lv32_11 = "10001";
const sc_lv<64> singleGUV::ap_const_lv64_3FC6A09E60000000 = "11111111000110101000001001111001100000000000000000000000000000";
const sc_lv<64> singleGUV::ap_const_lv64_3FD0000000000000 = "11111111010000000000000000000000000000000000000000000000000000";
const sc_lv<64> singleGUV::ap_const_lv64_3FE6A09E60000000 = "11111111100110101000001001111001100000000000000000000000000000";
const sc_lv<64> singleGUV::ap_const_lv64_3FF0000000000000 = "11111111110000000000000000000000000000000000000000000000000000";
const sc_lv<3> singleGUV::ap_const_lv3_0 = "000";
const sc_lv<4> singleGUV::ap_const_lv4_8 = "1000";
const sc_lv<4> singleGUV::ap_const_lv4_1 = "1";

singleGUV::singleGUV(sc_module_name name) : sc_module(name), mVcdFile(0) {
    DCT_8x8_2D_fptrunbkb_U0 = new DCT_8x8_2D_fptrunbkb<1,1,64,32>("DCT_8x8_2D_fptrunbkb_U0");
    DCT_8x8_2D_fptrunbkb_U0->din0(G_2_in_reg_530);
    DCT_8x8_2D_fptrunbkb_U0->dout(G_1_fu_132_p1);
    DCT_8x8_2D_fpext_cud_U1 = new DCT_8x8_2D_fpext_cud<1,1,32,64>("DCT_8x8_2D_fpext_cud_U1");
    DCT_8x8_2D_fpext_cud_U1->din0(grp_fu_135_p0);
    DCT_8x8_2D_fpext_cud_U1->dout(grp_fu_135_p1);
    DCT_8x8_2D_dadd_6dEe_U2 = new DCT_8x8_2D_dadd_6dEe<1,4,64,64,64>("DCT_8x8_2D_dadd_6dEe_U2");
    DCT_8x8_2D_dadd_6dEe_U2->clk(ap_clk);
    DCT_8x8_2D_dadd_6dEe_U2->reset(ap_rst);
    DCT_8x8_2D_dadd_6dEe_U2->din0(reg_157);
    DCT_8x8_2D_dadd_6dEe_U2->din1(G_2_in_v_reg_525);
    DCT_8x8_2D_dadd_6dEe_U2->ce(ap_var_for_const0);
    DCT_8x8_2D_dadd_6dEe_U2->dout(grp_fu_140_p2);
    DCT_8x8_2D_dmul_6eOg_U3 = new DCT_8x8_2D_dmul_6eOg<1,4,64,64,64>("DCT_8x8_2D_dmul_6eOg_U3");
    DCT_8x8_2D_dmul_6eOg_U3->clk(ap_clk);
    DCT_8x8_2D_dmul_6eOg_U3->reset(ap_rst);
    DCT_8x8_2D_dmul_6eOg_U3->din0(grp_fu_144_p0);
    DCT_8x8_2D_dmul_6eOg_U3->din1(grp_fu_144_p1);
    DCT_8x8_2D_dmul_6eOg_U3->ce(ap_var_for_const0);
    DCT_8x8_2D_dmul_6eOg_U3->dout(grp_fu_144_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_G_2_in_v_fu_373_p3);
    sensitive << ( tmp_reg_404 );
    sensitive << ( grp_fu_144_p2 );
    sensitive << ( reg_168 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond1_fu_276_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond1_fu_276_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond1_fu_276_p2 );
    sensitive << ( G_fu_42 );

    SC_METHOD(thread_cosMat_address0);
    sensitive << ( tmp_reg_404 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond1_fu_276_p2 );
    sensitive << ( cosMat_addr_2_reg_492 );
    sensitive << ( cosMat_addr_3_reg_497 );
    sensitive << ( tmp_24_cast_fu_261_p1 );
    sensitive << ( tmp_25_cast_fu_271_p1 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_cosMat_ce0);
    sensitive << ( tmp_reg_404 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond1_fu_276_p2 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_exitcond1_fu_276_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( x_assign_reg_110 );

    SC_METHOD(thread_exitcond_fu_347_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( x_assign_1_reg_121 );

    SC_METHOD(thread_grp_fu_135_p0);
    sensitive << ( subimg_q0 );
    sensitive << ( cosMat_q0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_reg_404 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( G_fu_42 );

    SC_METHOD(thread_grp_fu_144_p0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( reg_163 );
    sensitive << ( reg_168 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( tmp_4_fu_196_p3 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_7_reg_449 );
    sensitive << ( tmp_2_reg_482 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_fu_144_p1);
    sensitive << ( reg_152 );
    sensitive << ( reg_157 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_6_fu_204_p3 );
    sensitive << ( tmp_12_fu_365_p3 );
    sensitive << ( tmp_16_reg_520 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_subimg_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_26_cast_fu_310_p1 );

    SC_METHOD(thread_subimg_ce0);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_tmp_12_fu_365_p3);
    sensitive << ( tmp_i3_reg_510 );

    SC_METHOD(thread_tmp_18_fu_215_p3);
    sensitive << ( v );

    SC_METHOD(thread_tmp_19_cast_fu_222_p1);
    sensitive << ( tmp_18_fu_215_p3 );

    SC_METHOD(thread_tmp_19_fu_229_p3);
    sensitive << ( u );

    SC_METHOD(thread_tmp_20_fu_244_p3);
    sensitive << ( x_assign_reg_110 );

    SC_METHOD(thread_tmp_21_cast_fu_236_p1);
    sensitive << ( tmp_19_fu_229_p3 );

    SC_METHOD(thread_tmp_21_fu_256_p2);
    sensitive << ( tmp_21_cast_reg_444 );
    sensitive << ( x_assign_cast2_cast_fu_240_p1 );

    SC_METHOD(thread_tmp_22_fu_266_p2);
    sensitive << ( u_cast1_cast_reg_439 );
    sensitive << ( tmp_23_cast_fu_252_p1 );

    SC_METHOD(thread_tmp_23_cast_fu_252_p1);
    sensitive << ( tmp_20_fu_244_p3 );

    SC_METHOD(thread_tmp_23_fu_305_p2);
    sensitive << ( tmp_23_cast_reg_454 );
    sensitive << ( x_assign_1_cast1_cas_fu_301_p1 );

    SC_METHOD(thread_tmp_24_cast_fu_261_p1);
    sensitive << ( tmp_21_fu_256_p2 );

    SC_METHOD(thread_tmp_24_fu_315_p2);
    sensitive << ( tmp_19_cast_reg_434 );
    sensitive << ( x_assign_1_cast1_cas_fu_301_p1 );

    SC_METHOD(thread_tmp_25_cast_fu_271_p1);
    sensitive << ( tmp_22_fu_266_p2 );

    SC_METHOD(thread_tmp_25_fu_325_p3);
    sensitive << ( x_assign_1_reg_121 );

    SC_METHOD(thread_tmp_26_cast_fu_310_p1);
    sensitive << ( tmp_23_fu_305_p2 );

    SC_METHOD(thread_tmp_26_fu_337_p2);
    sensitive << ( v_cast2_cast_reg_429 );
    sensitive << ( tmp_29_cast_fu_333_p1 );

    SC_METHOD(thread_tmp_27_cast_fu_320_p1);
    sensitive << ( tmp_24_fu_315_p2 );

    SC_METHOD(thread_tmp_29_cast_fu_333_p1);
    sensitive << ( tmp_25_fu_325_p3 );

    SC_METHOD(thread_tmp_2_fu_294_p3);
    sensitive << ( tmp_i2_reg_477 );

    SC_METHOD(thread_tmp_30_cast_fu_342_p1);
    sensitive << ( tmp_26_fu_337_p2 );

    SC_METHOD(thread_tmp_4_fu_196_p3);
    sensitive << ( tmp_i_reg_409 );

    SC_METHOD(thread_tmp_6_fu_204_p3);
    sensitive << ( tmp_i1_reg_414 );

    SC_METHOD(thread_tmp_fu_173_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( inv );

    SC_METHOD(thread_tmp_i1_fu_185_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( v );

    SC_METHOD(thread_tmp_i2_fu_288_p2);
    sensitive << ( tmp_reg_404 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond1_fu_276_p2 );
    sensitive << ( x_assign_reg_110 );

    SC_METHOD(thread_tmp_i3_fu_359_p2);
    sensitive << ( tmp_reg_404 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( exitcond_fu_347_p2 );
    sensitive << ( x_assign_1_reg_121 );

    SC_METHOD(thread_tmp_i_fu_179_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( u );

    SC_METHOD(thread_u_cast1_cast_fu_226_p1);
    sensitive << ( u );

    SC_METHOD(thread_v_cast2_cast_fu_212_p1);
    sensitive << ( v );

    SC_METHOD(thread_x_assign_1_cast1_cas_fu_301_p1);
    sensitive << ( x_assign_1_reg_121 );

    SC_METHOD(thread_x_assign_cast2_cast_fu_240_p1);
    sensitive << ( x_assign_reg_110 );

    SC_METHOD(thread_x_fu_282_p2);
    sensitive << ( x_assign_reg_110 );

    SC_METHOD(thread_y_fu_353_p2);
    sensitive << ( x_assign_1_reg_121 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_276_p2 );
    sensitive << ( exitcond_fu_347_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "singleGUV_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, subimg_address0, "(port)subimg_address0");
    sc_trace(mVcdFile, subimg_ce0, "(port)subimg_ce0");
    sc_trace(mVcdFile, subimg_q0, "(port)subimg_q0");
    sc_trace(mVcdFile, u, "(port)u");
    sc_trace(mVcdFile, v, "(port)v");
    sc_trace(mVcdFile, inv, "(port)inv");
    sc_trace(mVcdFile, cosMat_address0, "(port)cosMat_address0");
    sc_trace(mVcdFile, cosMat_ce0, "(port)cosMat_ce0");
    sc_trace(mVcdFile, cosMat_q0, "(port)cosMat_q0");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_fu_135_p1, "grp_fu_135_p1");
    sc_trace(mVcdFile, reg_152, "reg_152");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_reg_404, "tmp_reg_404");
    sc_trace(mVcdFile, reg_157, "reg_157");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, grp_fu_144_p2, "grp_fu_144_p2");
    sc_trace(mVcdFile, reg_163, "reg_163");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, reg_168, "reg_168");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, tmp_fu_173_p2, "tmp_fu_173_p2");
    sc_trace(mVcdFile, tmp_i_fu_179_p2, "tmp_i_fu_179_p2");
    sc_trace(mVcdFile, tmp_i_reg_409, "tmp_i_reg_409");
    sc_trace(mVcdFile, tmp_i1_fu_185_p2, "tmp_i1_fu_185_p2");
    sc_trace(mVcdFile, tmp_i1_reg_414, "tmp_i1_reg_414");
    sc_trace(mVcdFile, tmp_4_fu_196_p3, "tmp_4_fu_196_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_6_fu_204_p3, "tmp_6_fu_204_p3");
    sc_trace(mVcdFile, v_cast2_cast_fu_212_p1, "v_cast2_cast_fu_212_p1");
    sc_trace(mVcdFile, v_cast2_cast_reg_429, "v_cast2_cast_reg_429");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_19_cast_fu_222_p1, "tmp_19_cast_fu_222_p1");
    sc_trace(mVcdFile, tmp_19_cast_reg_434, "tmp_19_cast_reg_434");
    sc_trace(mVcdFile, u_cast1_cast_fu_226_p1, "u_cast1_cast_fu_226_p1");
    sc_trace(mVcdFile, u_cast1_cast_reg_439, "u_cast1_cast_reg_439");
    sc_trace(mVcdFile, tmp_21_cast_fu_236_p1, "tmp_21_cast_fu_236_p1");
    sc_trace(mVcdFile, tmp_21_cast_reg_444, "tmp_21_cast_reg_444");
    sc_trace(mVcdFile, tmp_7_reg_449, "tmp_7_reg_449");
    sc_trace(mVcdFile, tmp_23_cast_fu_252_p1, "tmp_23_cast_fu_252_p1");
    sc_trace(mVcdFile, tmp_23_cast_reg_454, "tmp_23_cast_reg_454");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, x_fu_282_p2, "x_fu_282_p2");
    sc_trace(mVcdFile, x_reg_472, "x_reg_472");
    sc_trace(mVcdFile, tmp_i2_fu_288_p2, "tmp_i2_fu_288_p2");
    sc_trace(mVcdFile, tmp_i2_reg_477, "tmp_i2_reg_477");
    sc_trace(mVcdFile, exitcond1_fu_276_p2, "exitcond1_fu_276_p2");
    sc_trace(mVcdFile, tmp_2_fu_294_p3, "tmp_2_fu_294_p3");
    sc_trace(mVcdFile, tmp_2_reg_482, "tmp_2_reg_482");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, cosMat_addr_2_reg_492, "cosMat_addr_2_reg_492");
    sc_trace(mVcdFile, cosMat_addr_3_reg_497, "cosMat_addr_3_reg_497");
    sc_trace(mVcdFile, y_fu_353_p2, "y_fu_353_p2");
    sc_trace(mVcdFile, y_reg_505, "y_reg_505");
    sc_trace(mVcdFile, tmp_i3_fu_359_p2, "tmp_i3_fu_359_p2");
    sc_trace(mVcdFile, tmp_i3_reg_510, "tmp_i3_reg_510");
    sc_trace(mVcdFile, exitcond_fu_347_p2, "exitcond_fu_347_p2");
    sc_trace(mVcdFile, tmp_12_fu_365_p3, "tmp_12_fu_365_p3");
    sc_trace(mVcdFile, tmp_16_reg_520, "tmp_16_reg_520");
    sc_trace(mVcdFile, G_2_in_v_fu_373_p3, "G_2_in_v_fu_373_p3");
    sc_trace(mVcdFile, G_2_in_v_reg_525, "G_2_in_v_reg_525");
    sc_trace(mVcdFile, grp_fu_140_p2, "grp_fu_140_p2");
    sc_trace(mVcdFile, G_2_in_reg_530, "G_2_in_reg_530");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, x_assign_reg_110, "x_assign_reg_110");
    sc_trace(mVcdFile, x_assign_1_reg_121, "x_assign_1_reg_121");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, tmp_24_cast_fu_261_p1, "tmp_24_cast_fu_261_p1");
    sc_trace(mVcdFile, tmp_25_cast_fu_271_p1, "tmp_25_cast_fu_271_p1");
    sc_trace(mVcdFile, tmp_26_cast_fu_310_p1, "tmp_26_cast_fu_310_p1");
    sc_trace(mVcdFile, tmp_27_cast_fu_320_p1, "tmp_27_cast_fu_320_p1");
    sc_trace(mVcdFile, tmp_30_cast_fu_342_p1, "tmp_30_cast_fu_342_p1");
    sc_trace(mVcdFile, G_fu_42, "G_fu_42");
    sc_trace(mVcdFile, G_1_fu_132_p1, "G_1_fu_132_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, grp_fu_135_p0, "grp_fu_135_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, grp_fu_144_p0, "grp_fu_144_p0");
    sc_trace(mVcdFile, grp_fu_144_p1, "grp_fu_144_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, tmp_18_fu_215_p3, "tmp_18_fu_215_p3");
    sc_trace(mVcdFile, tmp_19_fu_229_p3, "tmp_19_fu_229_p3");
    sc_trace(mVcdFile, tmp_20_fu_244_p3, "tmp_20_fu_244_p3");
    sc_trace(mVcdFile, x_assign_cast2_cast_fu_240_p1, "x_assign_cast2_cast_fu_240_p1");
    sc_trace(mVcdFile, tmp_21_fu_256_p2, "tmp_21_fu_256_p2");
    sc_trace(mVcdFile, tmp_22_fu_266_p2, "tmp_22_fu_266_p2");
    sc_trace(mVcdFile, x_assign_1_cast1_cas_fu_301_p1, "x_assign_1_cast1_cas_fu_301_p1");
    sc_trace(mVcdFile, tmp_23_fu_305_p2, "tmp_23_fu_305_p2");
    sc_trace(mVcdFile, tmp_24_fu_315_p2, "tmp_24_fu_315_p2");
    sc_trace(mVcdFile, tmp_25_fu_325_p3, "tmp_25_fu_325_p3");
    sc_trace(mVcdFile, tmp_29_cast_fu_333_p1, "tmp_29_cast_fu_333_p1");
    sc_trace(mVcdFile, tmp_26_fu_337_p2, "tmp_26_fu_337_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

singleGUV::~singleGUV() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete DCT_8x8_2D_fptrunbkb_U0;
    delete DCT_8x8_2D_fpext_cud_U1;
    delete DCT_8x8_2D_dadd_6dEe_U2;
    delete DCT_8x8_2D_dmul_6eOg_U3;
}

void singleGUV::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void singleGUV::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state29.read()))) {
        G_fu_42 = G_1_fu_132_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        G_fu_42 = ap_const_lv32_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        x_assign_1_reg_121 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state29.read()))) {
        x_assign_1_reg_121 = y_reg_505.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_347_p2.read()))) {
        x_assign_reg_110 = x_reg_472.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        x_assign_reg_110 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state28.read()))) {
        G_2_in_reg_530 = grp_fu_140_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read()))) {
        G_2_in_v_reg_525 = G_2_in_v_fu_373_p3.read();
    }
    if ((!esl_seteq<1,1,1>(tmp_reg_404.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()))) {
        cosMat_addr_2_reg_492 =  (sc_lv<6>) (tmp_27_cast_fu_320_p1.read());
    }
    if ((esl_seteq<1,1,1>(tmp_reg_404.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()))) {
        cosMat_addr_3_reg_497 =  (sc_lv<6>) (tmp_30_cast_fu_342_p1.read());
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && 
  !esl_seteq<1,1,1>(tmp_reg_404.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && 
  esl_seteq<1,1,1>(tmp_reg_404.read(), ap_const_lv1_0)))) {
        reg_152 = grp_fu_135_p1.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read())) || (!esl_seteq<1,1,1>(tmp_reg_404.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read())))) {
        reg_157 = grp_fu_135_p1.read();
    }
    if (((esl_seteq<1,1,1>(tmp_reg_404.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read())) || (esl_seteq<1,1,1>(tmp_reg_404.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read())) || (esl_seteq<1,1,1>(tmp_reg_404.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state20.read())))) {
        reg_163 = grp_fu_144_p2.read();
    }
    if (((!esl_seteq<1,1,1>(tmp_reg_404.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read())) || (!esl_seteq<1,1,1>(tmp_reg_404.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read())) || (!esl_seteq<1,1,1>(tmp_reg_404.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read())))) {
        reg_168 = grp_fu_144_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_reg_404.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state20.read()))) {
        tmp_16_reg_520 = grp_fu_135_p1.read();
    }
    if ((!esl_seteq<1,1,1>(tmp_reg_404.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        tmp_19_cast_reg_434 = tmp_19_cast_fu_222_p1.read();
        tmp_21_cast_reg_444 = tmp_21_cast_fu_236_p1.read();
        tmp_7_reg_449 = grp_fu_144_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        tmp_23_cast_reg_454 = tmp_23_cast_fu_252_p1.read();
        x_reg_472 = x_fu_282_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(tmp_reg_404.read(), ap_const_lv1_0))) {
        tmp_2_reg_482 = tmp_2_fu_294_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        tmp_i1_reg_414 = tmp_i1_fu_185_p2.read();
        tmp_i_reg_409 = tmp_i_fu_179_p2.read();
        tmp_reg_404 = tmp_fu_173_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_reg_404.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_276_p2.read()))) {
        tmp_i2_reg_477 = tmp_i2_fu_288_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_reg_404.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_347_p2.read()))) {
        tmp_i3_reg_510 = tmp_i3_fu_359_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_reg_404.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        u_cast1_cast_reg_439 = u_cast1_cast_fu_226_p1.read();
        v_cast2_cast_reg_429 = v_cast2_cast_fu_212_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()))) {
        y_reg_505 = y_fu_353_p2.read();
    }
}

void singleGUV::thread_G_2_in_v_fu_373_p3() {
    G_2_in_v_fu_373_p3 = (!tmp_reg_404.read()[0].is_01())? sc_lv<64>(): ((tmp_reg_404.read()[0].to_bool())? reg_168.read(): grp_fu_144_p2.read());
}

void singleGUV::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void singleGUV::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read().range(9, 9);
}

void singleGUV::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read().range(11, 11);
}

void singleGUV::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read().range(12, 12);
}

void singleGUV::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read().range(13, 13);
}

void singleGUV::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read().range(15, 15);
}

void singleGUV::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read().range(16, 16);
}

void singleGUV::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read().range(17, 17);
}

void singleGUV::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read().range(18, 18);
}

void singleGUV::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void singleGUV::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read().range(19, 19);
}

void singleGUV::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read().range(20, 20);
}

void singleGUV::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read().range(23, 23);
}

void singleGUV::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read().range(24, 24);
}

void singleGUV::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read().range(27, 27);
}

void singleGUV::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read().range(28, 28);
}

void singleGUV::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read().range(4, 4);
}

void singleGUV::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read().range(5, 5);
}

void singleGUV::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read().range(6, 6);
}

void singleGUV::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read().range(7, 7);
}

void singleGUV::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read().range(8, 8);
}

void singleGUV::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_276_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void singleGUV::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void singleGUV::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_276_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void singleGUV::thread_ap_return() {
    ap_return = G_fu_42.read();
}

void singleGUV::thread_cosMat_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read()))) {
        cosMat_address0 = cosMat_addr_3_reg_497.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        cosMat_address0 = cosMat_addr_2_reg_492.read();
    } else if ((esl_seteq<1,1,1>(tmp_reg_404.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_276_p2.read()))) {
        cosMat_address0 =  (sc_lv<6>) (tmp_25_cast_fu_271_p1.read());
    } else if ((!esl_seteq<1,1,1>(tmp_reg_404.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_276_p2.read()))) {
        cosMat_address0 =  (sc_lv<6>) (tmp_24_cast_fu_261_p1.read());
    } else {
        cosMat_address0 = "XXXXXX";
    }
}

void singleGUV::thread_cosMat_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read())) || 
         (esl_seteq<1,1,1>(tmp_reg_404.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_276_p2.read())) || 
         (!esl_seteq<1,1,1>(tmp_reg_404.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_276_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read())))) {
        cosMat_ce0 = ap_const_logic_1;
    } else {
        cosMat_ce0 = ap_const_logic_0;
    }
}

void singleGUV::thread_exitcond1_fu_276_p2() {
    exitcond1_fu_276_p2 = (!x_assign_reg_110.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(x_assign_reg_110.read() == ap_const_lv4_8);
}

void singleGUV::thread_exitcond_fu_347_p2() {
    exitcond_fu_347_p2 = (!x_assign_1_reg_121.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(x_assign_1_reg_121.read() == ap_const_lv4_8);
}

void singleGUV::thread_grp_fu_135_p0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read()))) {
        grp_fu_135_p0 = G_fu_42.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        grp_fu_135_p0 = subimg_q0.read();
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && 
                 !esl_seteq<1,1,1>(tmp_reg_404.read(), ap_const_lv1_0)) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()) && 
                 esl_seteq<1,1,1>(tmp_reg_404.read(), ap_const_lv1_0)) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state20.read())))) {
        grp_fu_135_p0 = cosMat_q0.read();
    } else {
        grp_fu_135_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void singleGUV::thread_grp_fu_144_p0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read())))) {
        grp_fu_144_p0 = reg_168.read();
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read())))) {
        grp_fu_144_p0 = reg_163.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        grp_fu_144_p0 = tmp_7_reg_449.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        grp_fu_144_p0 = tmp_2_reg_482.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        grp_fu_144_p0 = tmp_4_fu_196_p3.read();
    } else {
        grp_fu_144_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void singleGUV::thread_grp_fu_144_p1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read()))) {
        grp_fu_144_p1 = tmp_16_reg_520.read();
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read())))) {
        grp_fu_144_p1 = reg_152.read();
    } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read())) || 
                (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read())))) {
        grp_fu_144_p1 = reg_157.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        grp_fu_144_p1 = tmp_12_fu_365_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        grp_fu_144_p1 = tmp_6_fu_204_p3.read();
    } else {
        grp_fu_144_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void singleGUV::thread_subimg_address0() {
    subimg_address0 =  (sc_lv<6>) (tmp_26_cast_fu_310_p1.read());
}

void singleGUV::thread_subimg_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()))) {
        subimg_ce0 = ap_const_logic_1;
    } else {
        subimg_ce0 = ap_const_logic_0;
    }
}

void singleGUV::thread_tmp_12_fu_365_p3() {
    tmp_12_fu_365_p3 = (!tmp_i3_reg_510.read()[0].is_01())? sc_lv<64>(): ((tmp_i3_reg_510.read()[0].to_bool())? ap_const_lv64_3FE6A09E60000000: ap_const_lv64_3FF0000000000000);
}

void singleGUV::thread_tmp_18_fu_215_p3() {
    tmp_18_fu_215_p3 = esl_concat<4,3>(v.read(), ap_const_lv3_0);
}

void singleGUV::thread_tmp_19_cast_fu_222_p1() {
    tmp_19_cast_fu_222_p1 = esl_zext<8,7>(tmp_18_fu_215_p3.read());
}

void singleGUV::thread_tmp_19_fu_229_p3() {
    tmp_19_fu_229_p3 = esl_concat<4,3>(u.read(), ap_const_lv3_0);
}

void singleGUV::thread_tmp_20_fu_244_p3() {
    tmp_20_fu_244_p3 = esl_concat<4,3>(x_assign_reg_110.read(), ap_const_lv3_0);
}

void singleGUV::thread_tmp_21_cast_fu_236_p1() {
    tmp_21_cast_fu_236_p1 = esl_zext<8,7>(tmp_19_fu_229_p3.read());
}

void singleGUV::thread_tmp_21_fu_256_p2() {
    tmp_21_fu_256_p2 = (!x_assign_cast2_cast_fu_240_p1.read().is_01() || !tmp_21_cast_reg_444.read().is_01())? sc_lv<8>(): (sc_biguint<8>(x_assign_cast2_cast_fu_240_p1.read()) + sc_biguint<8>(tmp_21_cast_reg_444.read()));
}

void singleGUV::thread_tmp_22_fu_266_p2() {
    tmp_22_fu_266_p2 = (!u_cast1_cast_reg_439.read().is_01() || !tmp_23_cast_fu_252_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(u_cast1_cast_reg_439.read()) + sc_biguint<8>(tmp_23_cast_fu_252_p1.read()));
}

void singleGUV::thread_tmp_23_cast_fu_252_p1() {
    tmp_23_cast_fu_252_p1 = esl_zext<8,7>(tmp_20_fu_244_p3.read());
}

void singleGUV::thread_tmp_23_fu_305_p2() {
    tmp_23_fu_305_p2 = (!x_assign_1_cast1_cas_fu_301_p1.read().is_01() || !tmp_23_cast_reg_454.read().is_01())? sc_lv<8>(): (sc_biguint<8>(x_assign_1_cast1_cas_fu_301_p1.read()) + sc_biguint<8>(tmp_23_cast_reg_454.read()));
}

void singleGUV::thread_tmp_24_cast_fu_261_p1() {
    tmp_24_cast_fu_261_p1 = esl_zext<32,8>(tmp_21_fu_256_p2.read());
}

void singleGUV::thread_tmp_24_fu_315_p2() {
    tmp_24_fu_315_p2 = (!x_assign_1_cast1_cas_fu_301_p1.read().is_01() || !tmp_19_cast_reg_434.read().is_01())? sc_lv<8>(): (sc_biguint<8>(x_assign_1_cast1_cas_fu_301_p1.read()) + sc_biguint<8>(tmp_19_cast_reg_434.read()));
}

void singleGUV::thread_tmp_25_cast_fu_271_p1() {
    tmp_25_cast_fu_271_p1 = esl_zext<32,8>(tmp_22_fu_266_p2.read());
}

void singleGUV::thread_tmp_25_fu_325_p3() {
    tmp_25_fu_325_p3 = esl_concat<4,3>(x_assign_1_reg_121.read(), ap_const_lv3_0);
}

void singleGUV::thread_tmp_26_cast_fu_310_p1() {
    tmp_26_cast_fu_310_p1 = esl_zext<32,8>(tmp_23_fu_305_p2.read());
}

void singleGUV::thread_tmp_26_fu_337_p2() {
    tmp_26_fu_337_p2 = (!v_cast2_cast_reg_429.read().is_01() || !tmp_29_cast_fu_333_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(v_cast2_cast_reg_429.read()) + sc_biguint<8>(tmp_29_cast_fu_333_p1.read()));
}

void singleGUV::thread_tmp_27_cast_fu_320_p1() {
    tmp_27_cast_fu_320_p1 = esl_zext<32,8>(tmp_24_fu_315_p2.read());
}

void singleGUV::thread_tmp_29_cast_fu_333_p1() {
    tmp_29_cast_fu_333_p1 = esl_zext<8,7>(tmp_25_fu_325_p3.read());
}

void singleGUV::thread_tmp_2_fu_294_p3() {
    tmp_2_fu_294_p3 = (!tmp_i2_reg_477.read()[0].is_01())? sc_lv<64>(): ((tmp_i2_reg_477.read()[0].to_bool())? ap_const_lv64_3FC6A09E60000000: ap_const_lv64_3FD0000000000000);
}

void singleGUV::thread_tmp_30_cast_fu_342_p1() {
    tmp_30_cast_fu_342_p1 = esl_zext<32,8>(tmp_26_fu_337_p2.read());
}

void singleGUV::thread_tmp_4_fu_196_p3() {
    tmp_4_fu_196_p3 = (!tmp_i_reg_409.read()[0].is_01())? sc_lv<64>(): ((tmp_i_reg_409.read()[0].to_bool())? ap_const_lv64_3FC6A09E60000000: ap_const_lv64_3FD0000000000000);
}

void singleGUV::thread_tmp_6_fu_204_p3() {
    tmp_6_fu_204_p3 = (!tmp_i1_reg_414.read()[0].is_01())? sc_lv<64>(): ((tmp_i1_reg_414.read()[0].to_bool())? ap_const_lv64_3FE6A09E60000000: ap_const_lv64_3FF0000000000000);
}

void singleGUV::thread_tmp_fu_173_p2() {
    tmp_fu_173_p2 = (!inv.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(inv.read() == ap_const_lv32_0);
}

void singleGUV::thread_tmp_i1_fu_185_p2() {
    tmp_i1_fu_185_p2 = (!v.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(v.read() == ap_const_lv4_0);
}

void singleGUV::thread_tmp_i2_fu_288_p2() {
    tmp_i2_fu_288_p2 = (!x_assign_reg_110.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(x_assign_reg_110.read() == ap_const_lv4_0);
}

void singleGUV::thread_tmp_i3_fu_359_p2() {
    tmp_i3_fu_359_p2 = (!x_assign_1_reg_121.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(x_assign_1_reg_121.read() == ap_const_lv4_0);
}

void singleGUV::thread_tmp_i_fu_179_p2() {
    tmp_i_fu_179_p2 = (!u.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(u.read() == ap_const_lv4_0);
}

void singleGUV::thread_u_cast1_cast_fu_226_p1() {
    u_cast1_cast_fu_226_p1 = esl_zext<8,4>(u.read());
}

void singleGUV::thread_v_cast2_cast_fu_212_p1() {
    v_cast2_cast_fu_212_p1 = esl_zext<8,4>(v.read());
}

void singleGUV::thread_x_assign_1_cast1_cas_fu_301_p1() {
    x_assign_1_cast1_cas_fu_301_p1 = esl_zext<8,4>(x_assign_1_reg_121.read());
}

void singleGUV::thread_x_assign_cast2_cast_fu_240_p1() {
    x_assign_cast2_cast_fu_240_p1 = esl_zext<8,4>(x_assign_reg_110.read());
}

void singleGUV::thread_x_fu_282_p2() {
    x_fu_282_p2 = (!x_assign_reg_110.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(x_assign_reg_110.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void singleGUV::thread_y_fu_353_p2() {
    y_fu_353_p2 = (!x_assign_1_reg_121.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(x_assign_1_reg_121.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void singleGUV::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_276_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_347_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<29>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

